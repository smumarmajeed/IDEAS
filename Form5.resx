<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>